SYMBOLS {
  __STACK_SIZE__: type = weak, value = $0100;      # 1 page stack
	__STACK_START__: type = weak, value = $700;
  NES_PRG_BANKS:	 type = weak,  value = 1; 			# number of 16K PRG banks, change to 2 for NROM256
  NES_CHR_BANKS:	  type = weak, value = 1; 			# number of 8K CHR banks
}
MEMORY {
# Zero Page
  ZP:     file = "", start = $0020, size = $00E0, type = rw, define = yes;
  # RAM copy of sprite data
  OAM1: start = $0200, size = $0100, define = yes;
  # regular ram
  RAM:  start = $0300, size = $0400, define = yes;

  #INES Header:
  HEADER: start = $0, size = $10, file = %O ,fill = yes;

  PRG:  start = $8000, size = $3ffa, file = %O, fill = yes, define = yes;

  # Hardware Vectors at End of 2nd 8K ROM
  VECTORS:  start = $FFFA, size = $0006, file = %O, fill = yes;

  # 1 8k CHR Bank
  CHR:   start = $0000, size = $2000, file = %O, fill = yes;
}

SEGMENTS {
    HEADER:   load = HEADER,         type = ro;
    STARTUP:  load = PRG,            type = ro,  define = yes;
    LOWCODE:  load = PRG,            type = ro,                optional = yes;
    INIT:     load = PRG,            type = ro,  define = yes, optional = yes;
    CODE:     load = PRG,            type = ro,  define = yes;
    RODATA:   load = PRG,            type = ro,  define = yes;
    DATA:     load = PRG, run = RAM, type = rw,  define = yes;
    VECTORS:  load = VECTORS,        type = rw;
    CHARS:    load = CHR,            type = rw;
    BSS:      load = RAM,            type = bss, define = yes;
    HEAP:     load = RAM,            type = bss, optional = yes;
    ZEROPAGE: load = ZP,             type = zp;
	OAM:	  load = OAM1,			 type = bss, define = yes;
	ONCE:     load = PRG,            type = ro,  define = yes;
}




FEATURES {
    CONDES: segment = INIT,
        type = constructor,
        label = __CONSTRUCTOR_TABLE__,
        count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
        type = destructor,
        label = __DESTRUCTOR_TABLE__,
        count = __DESTRUCTOR_COUNT__;
    CONDES: type = interruptor,
        segment = RODATA,
        label = __INTERRUPTOR_TABLE__,
        count = __INTERRUPTOR_COUNT__;
}
